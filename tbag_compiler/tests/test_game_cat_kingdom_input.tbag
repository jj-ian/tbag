room {}

room Great_Hall { 
	name = "Great_Hall";
}

room Throne_Room {
	name = "Throne_Room";
}

room East_Chamber {
	name = "East_Chamber";
}

room West_Chamber {
	name = "West_Chamber";
}

room Kitchen {
	name = "Kitchen";
}

room Private_Bedroom {
	name = "Private_Bedroom";
}

room Stairs {
	name = "Stairs";
}

room Library {
	name = "Library";
}

Throne_Room <-> Great_Hall;
West_Chamber <-> Great_Hall;
East_Chamber <-> Great_Hall;
Great_Hall <-> Stairs;
Stairs <-> Private_Bedroom;
West_Chamber <-> Kitchen;
Library <-> East_Chamber;

start { Great_Hall }

npc {
	int id;
	string name;
	string roomName;
	string message;
	string goodResponse;
	string evilResponse;
	string goodResult;
	string badResult;
}

npc Tubbs {
	id = 0;
	name = "King Tubbs";
	roomName = "East_Chamber";
	message = "hi";
	goodResponse = "";
	evilResponse = "";
	goodResult = "";
	badResult = "";
}

npc Pickles {
	id = 1;
	name = "Duke Pickles";
	roomName = "West_Chamber";
	message = "Your greatness, welcome to the treasury. I am your financial advisor.\n I stand here amongst our hoard of cheese chunks to determine the general \"cheesiness\" of our monarchy.\n Feel free to drop in any time and ask how things are going, yes.\n";
	goodResponse = ""; evilResponse = ""; goodResult = ""; badResult = "";
}

npc Marshmallow {
	id = 2;
	name = "Lady Marshmallow";
	roomName = "East_Chamber";
	message = "Hello, my new and temporary liege. I am your kingdom advisor.\n It is my job to advise you on the health and happiness of your kingdom.\n My own health and happiness is irrelevant.\n Please, see me again some time.\n";
	goodResponse = ""; evilResponse = ""; goodResult = ""; badResult = "";

}

npc Pumpkin {
	id = 3;
	name = "Pumpkin";
	roomName = "Throne_Room";
	message = "Excuse me, monarch, leader...\nI have a humble request...\nWould you be willing...\nTo sing to my stupid cat baby?\n";
	goodResponse = "Sure?\n"; 
	evilResponse = "IT'S MY BABY NOW!\n"; 
	goodResult = "You sing to the baby. It doesn't seem to care all that much.\n"; 
	badResult = "You eventually get bored of the baby and give it to someone else.\n";

}

npc Snowball {
	id = 4;
	name = "Snowball";
	roomName = "Throne_Room";
	message = "A cat baby is lost in the spooky forest!\nI know because it sent me this baby note, via forest squirrel!\n";
	goodResponse = "I will organize a search party!\n";
	evilResponse = "I will organize a snake party!\n";
	goodResult = "They find a baby, and a dozen or so other babies.\n";
	badResult = "You party with some snakes. What a night! The baby is never heard from again.\n";
}

npc Patches {
	id = 5;
	name = "Patches";
	roomName = "Throne_Room";
	message = "Help! It's terrible! The kingdom is out of potatoes! They are my favorite!\n";
	goodResponse = "I shall open the reserves!\n";
	evilResponse = "BAN POTATOES.";
	goodResult = "You throw what quickly becomes the world's greatest mashed potato party.\n";
	badResult = "Potatoes were made illegal, thus solving the crisis.\n";

}

npc Smokey {

}

npc Ginger {

}
/* tornado eivl response -- u send soldiers to knock it down even more*/
/* lonely evil response -- u start a royal pizza bagel budget*/
/* the peasants are miserable. but most of them aren't dead, so at least thats something*/
/*look at this hoard! this delicious cheesy hoard!*/
/*libray - every book was burned. the librarians cried for days*/
npc 

item {
	string name;
	string roomName;
}

item Key {
	name = "Key";
	roomName = "East_Chamber";
}

/* to easily access the db */
string[10] catNames;
string[10] catRoomNames;
string[10] catMessages;
string[10] goodResponses;
string[10] evilResponses;
string[10] goodResults;
string[10] badResults;

boolean started = false;
int week = 1;
boolean spokeToMarshmallow = false;
boolean spokeToPickles = false;
boolean spokeToSubjects = false;
boolean rollOverWeek = false;
int cheeseCubeSupply = 100;
int stateOfKingdom = 5;
int lengthSabbatical = 3;

NOT started {

	catNames[0] = Tubbs.name; catNames[1] = Pickles.name;
	catNames[2] = Marshmallow.name;
	catNames[3] = Pumpkin.name;
	catNames[4] = Snowball.name;
	catNames[5] = Patches.name;


	catRoomNames[0] = Tubbs.roomName;
	catRoomNames[1] = Pickles.roomName;
	catRoomNames[2] = Marshmallow.roomName;
	catRoomNames[3] = Pumpkin.roomName;
	catRoomNames[4] = Snowball.roomName;
	catRoomNames[5] = Patches.roomName;


	catMessages[0] = Tubbs.message;
	catMessages[1] = Pickles.message;
	catMessages[2] = Marshmallow.message;
	catMessages[3] = Pumpkin.message;
	catMessages[4] = Snowball.message;
	catMessages[5] = Patches.message;

goodResponses[0] = Tubbs.goodResponse;
goodResponses[1] = Pickles.goodResponse;
goodResponses[2] = Marshmallow.goodResponse;
goodResponses[3] = Pumpkin.goodResponse;
goodResponses[4] = Snowball.goodResponse;
goodResponses[5] = Patches.goodResponse;

evilResponses[0] = Tubbs.evilResponse;
evilResponses[1] = Pickles.evilResponse;
evilResponses[2] = Marshmallow.evilResponse;
evilResponses[3] = Pumpkin.evilResponse;
evilResponses[4] = Snowball.evilResponse;
evilResponses[5] = Patches.evilResponse;

goodResults[0] = Tubbs.goodResult;
goodResults[1] = Pickles.goodResult;
goodResults[2] = Marshmallow.goodResult;
goodResults[3] = Pumpkin.goodResult;
goodResults[4] = Snowball.goodResult;
goodResults[5] = Patches.goodResult;
badResults[0] = Tubbs.badResult;
badResults[1] = Pickles.badResult;
badResults[2] = Marshmallow.badResult;
badResults[3] = Pumpkin.badResult;
badResults[4] = Snowball.badResult;
badResults[5] = Patches.badResult;

	strPrintLine("King Tubbs, the great monarch of the Cat Kingdom, has recently discovered a sunbeam of sensational quality!");
	print("He has, understandably, requested a ");
	print(lengthSabbatical);
	strPrintLine(" week sabbatical.");
	strPrintLine("It is up to you (as an Official Visiting Noblecat) to lead the kingdom during that time.");
	strPrintLine("Speak to your advisors and then make some important decisions!");
	strPrintLine("At the end of seven weeks you can see exactly what sort of ruler you have been.");
	strPrintLine("THE CAT MONARCHY AWAITS YOUR STEADY LEADERSHIP!");
	started = true;
}



currentRoom.name ~~ Pickles.roomName {
	print("Ah, here is your gluttonous advisor ");
	print(Pickles.name);
	strPrintLine("!");
	strPrintLine("Do you want to talk to him?");
	getInputFromOptions("Yes", "No");
	
}

currentRoom.name ~~ Pickles.roomName AND input ~~ "Yes" {
	print(Pickles.name);
	strPrintLine(" says: ");
	strPrintLine(Pickles.message);	
	spokeToPickles = true;
}

currentRoom.name ~~ Marshmallow.roomName {
	print("In this room is your inconspicuous advisor ");
	print(Marshmallow.name);
	strPrintLine("!");
	strPrintLine("Do you want to talk to her?");
	getInputFromOptions("Yes", "No");

}

currentRoom.name ~~ Marshmallow.roomName AND input ~~ "Yes" {
	print(Marshmallow.name);
	strPrintLine(" says: ");
	strPrintLine(Marshmallow.message);
	spokeToMarshmallow = true;
}

currentRoom != Stairs {
	printCurrentRoomInfo();
	getInputAdjacentRooms(currentRoom);
}

NOT (input ~~ Throne_Room.name) {
	strPrintLine("1");
	->input
}

 input ~~ Throne_Room.name {
 	if (spokeToMarshmallow AND spokeToPickles) {
		strPrintLine("2");

	-> input
	} else {
				strPrintLine("3");

	strPrintLine("Before heading to the throne room to make today's BIG DECISIONS, you should consider talking to your advisors to the east and west!");
	}	
}

currentRoom == Throne_Room {
	strPrintLine("YOUR CAT SUBJECTS HAVE SOME IMPORTANT REQUESTS!");
		strPrintLine("YOUR CAT SUBJECTS HAVE EVEN MORE REQUESTS!");


}

week > lengthSabbatical {
	print("todo endgame stuff");

	endgame;
}

#import stdlib

func void printCurrentRoomInfo() {
	print("You're in the ");
	print(currentRoom.name);
	strPrintLine(".\n");
}

func string picklesMessages(int cheeseCubes) {
	if (cheeseCubes < 2) {
		return "";
	} else {}
	return "";
}


